% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/access-functions.R
\name{fit_accessData}
\alias{fit_accessData}
\title{Treat and fit access delay data to a logistic curve}
\usage{
fit_accessData(dat, test_type, cutPoints, speaker_word, fs, maxiter = 50)
}
\arguments{
\item{dat}{\emph{list.}
List of data frames containing the access delay data for a
test. Data frame must have same variables as the csv files
output from an access delay measurement.}

\item{test_type}{\emph{list.}
String indicating the type of test accociated with the fit.
I.e 'SUT', 'PTT', etc.}

\item{cutPoints}{\emph{list.}
List of data frames containing the cutpoints of the audio clips
used in testing. Cutpoints describe the samples at which P1
and P2 start and end in the audio clip.}

\item{speaker_word}{\emph{character array.}
Vector of speaKer and word combination for the words under test.
Example: 'F1 hook'}

\item{fs}{\emph{numeric.}
Sampling rate of the audio clips used in testing (Hz).
Allows sample number to be converted to a time in seconds.}

\item{maxiter}{\emph{numeric.}
Maximum number of iterations passed to fitting algorithm. Defaults to 50}
}
\value{
\emph{accessFit.} object, a list containing the following
              elements:

\code{fit} \emph{nls.}
              Logistic curve fit object returned from
              \code{\link[minpack.lm]{nlsLM}}.

\code{I0} \emph{numeric.}
              Asymptotic intelligibility of the system under test.

\code{curve_dat} \emph{data.frame.}
              Data frame of the treated data sent to the curve fitting
              function.

\code{session_dat} \emph{list.}
              List of raw data loaded from the session csv files. Same as
              \code{dat}.

\code{speaker_word} \emph{character array.}
              Array of the speaker and word combination (e.g. 'F1 hook')
              for each audio clip.

\code{test_type} \emph{character array.}
              String reflecting the type of access fit.
}
\description{
Treat and fit access delay data to a logistic curve. First, recenters timing
of access delay data so that the start of \code{P1} is at 0 seconds.
Then, calculates the asymptotic intelligiblity of each word and fits a single
logistic function across all of the access delay data. Returns an
\code{\link[accessTime]{accessFit}} object. Compatible with generic functions:
\code{\link[base]{print}}, \code{\link[stats]{coef}},
\code{\link[stats]{confint}}. See also
\code{\link[accessTime]{read_accessData}} to read access delay data to be fit,
and also \code{\link[accessTime]{process_accessData}} which is a wrapper
function for both \code{read_accessData} and \code{fit_accessData}.
}
\examples{
# Path to included raw data
dat_path <- system.file("extdata", package="accessTime")

# Analog Direct csv files
data_files <- find_session_csv(
  "capture_Analog_12-Nov-2020_08-26-11",
  dat_path
  )

# Get the session and cut file for one WUT
sessionFile <- data_files$sessions[1]
cutFile <- data_files$cut[1]

# Read session data
sess_dat <- read_accessData(sessionFile, cutFile)

# Fit session data
fit_dat <- fit_accessData(
  dat=sess_dat$dat,
  test_type="SUT",
  cutPoints=sess_dat$cutPoints,
  speaker_word=sess_dat$speaker_word,
  fs=sess_dat$fs
  )

}
\seealso{
\code{\link[minpack.lm]{nlsLM}}
}
