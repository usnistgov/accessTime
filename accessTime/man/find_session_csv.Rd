% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/access-functions.R
\name{find_session_csv}
\alias{find_session_csv}
\title{Find all required csv files to process data based off of identifying string}
\usage{
find_session_csv(id_str, dat_path = "data", find_all = TRUE)
}
\arguments{
\item{id_str}{\emph{character array.}
Identifying character string for the tests, of the form
\code{capture_\{Description\}_DD-Mon-YYYY_HH-MM-SS}, which will
match both measurement data and the corresponding wav folder.}

\item{dat_path}{\emph{character array.}
Parent directory containg measurement data csv and wav folders.}

\item{find_all}{\emph{logical.}
Indicates type of the test for the access fit.}
}
\value{
List containing the following elements

\code{sessions} \emph{character.}
        Path using \code{dat_path} to all session csv files matching id_str.

\code{cut} \emph{character.}
        Path using \code{dat_path} to all cut point files matching id_str.
}
\description{
Find both the session and cutpoint files required for processing access
delay data.
}
\details{
This function relies on data in \code{dat_path} being stored in
accordance with how MCV QoE measurement data structures. In particular
\code{dat_path} must have folders \emph{csv} and \emph{wav}.

\emph{csv}
contains csv files for each test with all output measurement data. All
measurement files are of the form
\code{capture_\{Description\}_DD-Mon-YYYY_HH-MM-SS_\{Audio File\}.csv}

\emph{wav} contains wav folders for each test, and are of the name
\code{capture_\{Description\}_DD-Mon-YYYY_HH-MM-SS}. It is critical this
folder contains the cutpoints for the transmit audio for an access delay test.
}
\examples{
dat_path <- system.file("extdata", package="accessTime")
# Identifying string for P25 Phase1 Trunked data
id_str <- "capture_P25-Phase1-Trunked_04-Nov-2020_07-21-19"

# Find data and cutpoint csv files
sesh_csv <- find_session_csv(id_str,dat_path)

# Generate SUT access fits for each word under test (WUT)
p25p2_wut <- mapply(process_accessData,sesh_csv$sessions,sesh_csv$cut,"SUT",SIMPLIFY = FALSE)
}
