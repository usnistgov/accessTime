% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/access-functions.R
\name{process_accessData}
\alias{process_accessData}
\title{Wrapper function to read, process, and fit access delay data}
\usage{
process_accessData(sessionFiles, cutFiles, test_type, maxiter = 50)
}
\arguments{
\item{sessionFiles}{\emph{character array.}
Array of csv file names associated with a particular access
delay test.}

\item{cutFiles}{\emph{character array.}
Array of cutpoint file names.}

\item{test_type}{\emph{character array.}
Indicates type of the test for the access fit.}

\item{maxiter}{\emph{numeric.}
Maximum number of iterations passed to fitting algorithm. Defaults to 50}
}
\value{
\emph{accessFit.} object, a list containing the following
              elements:

\code{fit} \emph{nls.}
              Logistic curve fit object returned from
              \code{\link[minpack.lm]{nlsLM}}.

\code{I0} \emph{numeric.}
              Asymptotic intelligibility of the system under test.

\code{curve_dat} \emph{data.frame.}
              Data frame of the treated data sent to the curve fitting
              function.

\code{session_dat} \emph{list.}
              List of raw data loaded from the session csv files. Same as
              \code{dat}.

\code{speaker_word} \emph{character array.}
              Array of the speaker and word combination (e.g. 'F1 hook')
              for each audio clip.

\code{test_type} \emph{character array.}
              String reflecting the type of access fit.
}
\description{
Read in access delay data, treat it, and fit a logistic function to the
treated data. Relies on calls to \code{\link[accessTime]{read_accessData}}
and \code{\link[accessTime]{fit_accessData}}. Returns an 'accessFit' object.
Compatible with generic functions: \code{\link[base]{print}},
\code{\link[stats]{coef}}, \code{\link[stats]{confint}}.
}
\examples{
# Path to included data
data_path <- system.file("extdata", package="accessTime")

# Get csvs based on identifier. Using Analog Direct
data_files <- find_session_csv(
 "capture_Analog_12-Nov-2020_08-26-11",
 dat_path = data_path
 )
# Process fit for single WUT
processed_data <- process_accessData(
 data_files$sessions[1],
 data_files$cut[1],
 test_type="SUT",
 maxiter=50
 )

}
\seealso{
\code{\link[minpack.lm]{nlsLM}}
}
