% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/access_animations.R
\name{make_access_animation}
\alias{make_access_animation}
\title{Create animations of access time tests}
\usage{
make_access_animation(
  accFit,
  alpha_lvls = c(0.01, 0.33, 0.66, 0.99),
  frame_dir = "frames",
  Audio_Data = NULL,
  output = "output.mp4",
  frame_rate = 10,
  curve_fit_audio = "",
  video_codec = "libx264",
  audio_codec = "aac",
  tx_examples = Inf,
  powerpoint = FALSE,
  extra_settings = NULL,
  output_directory = ""
)
}
\arguments{
\item{accFit}{\emph{accessFit} \code{\link[accessTime]{accessFit}} object.
Note \code{accFit} must be an accessFit object for a single talker.}

\item{alpha_lvls}{\emph{Numeric Vector} Fractional intelligibility levels to
show example recordings. Values must be in range (0,1). Defaults to
\code{alpha_lvls = c(0.01, 0.33, 0.66, 0.99)}.}

\item{frame_dir}{\emph{character} Path where animation frames will be
stored. Defaults to \code{frame_dir = "frames"}.}

\item{Audio_Data}{\emph{list} List with following structure: \describe{
\item{rec}{\emph{Wave} \code{\link[tuneR]{Wave-class}} object}
\item{cp}{\emph{data.frame} Data frame containing cutpoints for rec}
\item{rx_path}{\emph{character} Path where received audio files stored} }}

\item{output}{\emph{Filename} File name of output animation. Defaults to
\code{output="output.mpg"}.}

\item{curve_fit_audio}{{character} Path to audio to play when curve fit
image is displayed.}

\item{video_codec}{\emph{character} Video codec to use for output video}

\item{audio_codec}{\emph{character} Audio codec to use for output video}

\item{tx_examples}{\emph{numeric array.} Array containing which examples
should play but Tx and Rx audio together to demonstrate mouth-to-ear
latency. Default is \code{Inf}, which causes the last example to have both
audio files.}

\item{powerpoint}{\emph{logical.} Indicator to optimize for powerpoint
presentations. Will override codec settings add some options to make the
video import into power point presentations well.}

\item{extra_settings}{\emph{character.} Pass arbitrary options to ffmpeg}

\item{output_directory}{\emph{character.} Directory to save intermediate
files to}
}
\description{
Create an animation using data from \code{accFit}. Iterate through PTT
times, and incrementally plot intelligibility scores. At each element of
\code{alpha_lvls} specific trials will be identified that have
intelligibilites close to the alpha_lvl on the intelligibility curve. If
\code{Audio_Data} is passed as an argument, example recordings will also be
plotted and played during the animation. Note that the accFit must be data
for a single word/talker pair. Animations will not generate for accessFit
objects with multiple talkers/words.
}
\details{

}
\section{FFMPEG and Python}{
 In order for the animation frames to be stitched
 into a single video, both FFMPEG and Python are required to be in the
 system path. If they are not in the system path, the frames will still be
 generated, but the final video will not be produced and an error will be
 thrown.
}

\examples{
# Path to included raw data
raw_path <- system.file("extdata", "Measurements", package = "accessTime")
# Path to P25 Trunked Phase 1 Data
test_path <- file.path(raw_path, "P25_Trunked_Phase1")
# All files in test directory
test_files <- list.files(test_path)
# Select First file (F1 hook)
test_file <- test_files[1]
# Full path to test file
file_path <- file.path(test_path,test_file)

# Directory to audio clip wav files and cut points
cutDir <- system.file("extdata", "Audio_Clips", package="accessTime")

# Create access fit object
accFit <- process_accessData(file_path,cutDir)

make_access_animation(accFit,
                      frame_dir="Frames-P25_Trunked_Phase1_F1_hook",
                      output="P25_Trunked_Phase1_F1_hook.mpg")
}
